// <auto-generated />
using System;
using InscripcionUniAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InscripcionUniAPI.Migrations
{
    [DbContext(typeof(UniversityDbContext))]
    [Migration("20250703171726_AddCreatedAtToStudents")]
    partial class AddCreatedAtToStudents
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("InscripcionUniAPI.Core.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<byte>("CreditHours")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("InscripcionUniAPI.Core.Entities.EnrolledCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<byte>("CreditHours")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("SemesterEnrollmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SemesterEnrollmentId", "CourseId")
                        .IsUnique();

                    b.ToTable("EnrolledCourses");
                });

            modelBuilder.Entity("InscripcionUniAPI.Core.Entities.SemesterEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("MaxCreditHours")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<ushort>("Year")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("StudentId", "Year", "Term")
                        .IsUnique();

                    b.ToTable("SemesterEnrollments");
                });

            modelBuilder.Entity("InscripcionUniAPI.Core.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Matriculation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Matriculation")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("InscripcionUniAPI.Core.Entities.EnrolledCourse", b =>
                {
                    b.HasOne("InscripcionUniAPI.Core.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InscripcionUniAPI.Core.Entities.SemesterEnrollment", "SemesterEnrollment")
                        .WithMany("Courses")
                        .HasForeignKey("SemesterEnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("SemesterEnrollment");
                });

            modelBuilder.Entity("InscripcionUniAPI.Core.Entities.SemesterEnrollment", b =>
                {
                    b.HasOne("InscripcionUniAPI.Core.Entities.Student", null)
                        .WithMany("SemesterEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InscripcionUniAPI.Core.Entities.SemesterEnrollment", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("InscripcionUniAPI.Core.Entities.Student", b =>
                {
                    b.Navigation("SemesterEnrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
